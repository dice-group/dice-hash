name: code_testing

on: [ push ]

concurrency:
  group: publish-conan-branch-package-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - CC: "clang-10"
            CXX: "clang++-10"
          - CC: "gcc-10"
            CXX: "g++-10"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # setup
      - name: install needed packages
        run: sudo apt-get -qq update && sudo apt-get -qq install -y git make cmake gcc-10 g++-10 clang-10 libstdc++-10-dev
      # build
      - name: build tests
        run: mkdir build && cd build && cmake -DBUILD_TESTING=ON .. && make -j
        env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
      # execute
      - name: run tests
        run: build/tests/tests_dice_hash

  test_conan_packaging:
    runs-on: ubuntu-20.04
    steps:
      - name: Install conan
        run: sudo apt-get update -qq && sudo apt-get -qq install -y python3-pip gcc-10
      - name: setup conan
        run: |
          sudo pip3 install "conan==1.59"
          conan profile new --detect default
          conan profile update settings.compiler.libcxx=libstdc++11 default
        env:
          CC: gcc-10
          CXX: g++-10
      - uses: actions/checkout@v3
      - name: build and test the package
        run: conan create . --build missing
        env:
          CC: gcc-10
          CXX: g++-10

  #simply build the dockerfile and execute the produced image.
  #If you want to upload a docker image, you probably should have a look at https://github.com/docker/build-push-action
  build_docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      # build
      - name: build image
        run: docker build -t dockerimage .
      # run
      - name: run image
        run: docker run dockerimage

  # simply build the examples and execute them.
  build_examples:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - CC: "clang-10"
            CXX: "clang++-10"
          - CC: "gcc-10"
            CXX: "g++-10"
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # setup
      - name: install needed packages
        run: sudo apt-get -qq update && sudo apt-get -qq install -y git make cmake gcc-10 g++-10 clang-10 libstdc++-10-dev
      # build
      - name: build examples
        run: mkdir build && cd build && cmake -DBUILD_EXAMPLES=ON .. && make -j
        env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
      # execute
      - name: run examples
        run: |
          build/examples/basicUsage
          build/examples/policyUsage
          build/examples/customContainer
          build/examples/customPolicy
          build/examples/customType
          build/examples/usageForUnorderedSet
          build/examples/combineHashes