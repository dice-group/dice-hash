name: code_testing

on: [ push ]

concurrency:
  group: publish-conan-branch-package-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-run-tests-and-examples:
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            compiler: clang-15
          - os: ubuntu-22.04
            compiler: clang-16

          - os: ubuntu-22.04
            compiler: gcc-12
          - os: ubuntu-22.04
            compiler: gcc-13
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Add repos for for gcc-13 and clang-16
        uses: dice-group/cpp-conan-release-reusable-workflow/.github/actions/setup_apt@main

      - name: Install CMake
        uses: lukka/get-cmake@v3.29.3
        with:
          cmakeVersion: 3.24

      - name: Install compiler
        id: install_cc
        uses: rlalik/setup-cpp-compiler@v1.2
        with:
          compiler: ${{ matrix.config.compiler }}

      - name: Install linker
        uses: rui314/setup-mold@v1

      - name: Configure conan
        uses: dice-group/cpp-conan-release-reusable-workflow/.github/actions/configure_conan@main
        with:
          conan-version: 2.3.1

      - name: add conan user
        run: |
          conan remote add -f dice-group https://conan.dice-research.org/artifactory/api/conan/tentris

      - name: Cache conan data
        id: cache-conan
        uses: actions/cache@v4.0.2
        with:
          path: ~/.conan2/p
          key: ${{ matrix.config.os }}-${{ matrix.config.compiler }}

      - uses: actions/checkout@v4.1.6

      - name: Get dependency provider
        uses: dice-group/cpp-conan-release-reusable-workflow/.github/actions/add_conan_provider@main

      - name: Configure CMake
        run: cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DWITH_SODIUM=On -DBUILD_EXAMPLES=On -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=conan_provider.cmake -G Ninja -B build .
        env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
          CXXFLAGS: -fsanitize=undefined -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls

      - name: Build tests and examples
        working-directory: build
        run: cmake --build . -j2

      - name: Run tests
        working-directory: build
        run: ctest --verbose -j2

      - name: Run examples
        working-directory: build
        run: |
          for example in $(find ./examples -maxdepth 1 -type f -executable); do
            echo "running ${example}"
            ./${example}
          done
